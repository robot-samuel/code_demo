// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BMSMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BMSMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BmsMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BmsMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BMSMessage_2eproto() {
  protobuf_AddDesc_BMSMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BMSMessage.proto");
  GOOGLE_CHECK(file != NULL);
  BmsMessage_descriptor_ = file->message_type(0);
  static const int BmsMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, stat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, bms_soc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, bms_voltage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, bms_sys_current_),
  };
  BmsMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BmsMessage_descriptor_,
      BmsMessage::default_instance_,
      BmsMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BmsMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BmsMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BMSMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BmsMessage_descriptor_, &BmsMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BMSMessage_2eproto() {
  delete BmsMessage::default_instance_;
  delete BmsMessage_reflection_;
}

void protobuf_AddDesc_BMSMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020BMSMessage.proto\"Y\n\nBmsMessage\022\014\n\004Stat"
    "\030\001 \001(\005\022\017\n\007BMS_SOC\030\002 \001(\005\022\023\n\013BMS_Voltage\030\003"
    " \001(\002\022\027\n\017BMS_sys_Current\030\004 \001(\002", 109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BMSMessage.proto", &protobuf_RegisterTypes);
  BmsMessage::default_instance_ = new BmsMessage();
  BmsMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BMSMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BMSMessage_2eproto {
  StaticDescriptorInitializer_BMSMessage_2eproto() {
    protobuf_AddDesc_BMSMessage_2eproto();
  }
} static_descriptor_initializer_BMSMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BmsMessage::kStatFieldNumber;
const int BmsMessage::kBMSSOCFieldNumber;
const int BmsMessage::kBMSVoltageFieldNumber;
const int BmsMessage::kBMSSysCurrentFieldNumber;
#endif  // !_MSC_VER

BmsMessage::BmsMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BmsMessage::InitAsDefaultInstance() {
}

BmsMessage::BmsMessage(const BmsMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BmsMessage::SharedCtor() {
  _cached_size_ = 0;
  stat_ = 0;
  bms_soc_ = 0;
  bms_voltage_ = 0;
  bms_sys_current_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BmsMessage::~BmsMessage() {
  SharedDtor();
}

void BmsMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BmsMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BmsMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BmsMessage_descriptor_;
}

const BmsMessage& BmsMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BMSMessage_2eproto();
  return *default_instance_;
}

BmsMessage* BmsMessage::default_instance_ = NULL;

BmsMessage* BmsMessage::New() const {
  return new BmsMessage;
}

void BmsMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stat_ = 0;
    bms_soc_ = 0;
    bms_voltage_ = 0;
    bms_sys_current_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BmsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Stat = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_)));
          set_has_stat();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_BMS_SOC;
        break;
      }

      // optional int32 BMS_SOC = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_BMS_SOC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_soc_)));
          set_has_bms_soc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_BMS_Voltage;
        break;
      }

      // optional float BMS_Voltage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_BMS_Voltage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_voltage_)));
          set_has_bms_voltage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_BMS_sys_Current;
        break;
      }

      // optional float BMS_sys_Current = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_BMS_sys_Current:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bms_sys_current_)));
          set_has_bms_sys_current();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BmsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Stat = 1;
  if (has_stat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stat(), output);
  }

  // optional int32 BMS_SOC = 2;
  if (has_bms_soc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bms_soc(), output);
  }

  // optional float BMS_Voltage = 3;
  if (has_bms_voltage()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bms_voltage(), output);
  }

  // optional float BMS_sys_Current = 4;
  if (has_bms_sys_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->bms_sys_current(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BmsMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Stat = 1;
  if (has_stat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stat(), target);
  }

  // optional int32 BMS_SOC = 2;
  if (has_bms_soc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bms_soc(), target);
  }

  // optional float BMS_Voltage = 3;
  if (has_bms_voltage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bms_voltage(), target);
  }

  // optional float BMS_sys_Current = 4;
  if (has_bms_sys_current()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->bms_sys_current(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BmsMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Stat = 1;
    if (has_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stat());
    }

    // optional int32 BMS_SOC = 2;
    if (has_bms_soc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bms_soc());
    }

    // optional float BMS_Voltage = 3;
    if (has_bms_voltage()) {
      total_size += 1 + 4;
    }

    // optional float BMS_sys_Current = 4;
    if (has_bms_sys_current()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BmsMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BmsMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BmsMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BmsMessage::MergeFrom(const BmsMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stat()) {
      set_stat(from.stat());
    }
    if (from.has_bms_soc()) {
      set_bms_soc(from.bms_soc());
    }
    if (from.has_bms_voltage()) {
      set_bms_voltage(from.bms_voltage());
    }
    if (from.has_bms_sys_current()) {
      set_bms_sys_current(from.bms_sys_current());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BmsMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BmsMessage::CopyFrom(const BmsMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BmsMessage::IsInitialized() const {

  return true;
}

void BmsMessage::Swap(BmsMessage* other) {
  if (other != this) {
    std::swap(stat_, other->stat_);
    std::swap(bms_soc_, other->bms_soc_);
    std::swap(bms_voltage_, other->bms_voltage_);
    std::swap(bms_sys_current_, other->bms_sys_current_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BmsMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BmsMessage_descriptor_;
  metadata.reflection = BmsMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
